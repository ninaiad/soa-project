version: "3"

services:
  main:
    build:
      context: ./main_service
      dockerfile: main_service.dockerfile
    command: ./main
    ports:
      - 8000:8000
    depends_on:
      main-db:
        condition: service_healthy
      posts:
        condition: service_started
    environment:
      DB_PASSWORD: ${MAIN_DB_PASSWORD}
      PASSWORD_SALT: ${PASSWORD_SALT}
      TOKEN_SIGNING_KEY: ${TOKEN_SIGNING_KEY}
      POSTS_SERVER_ADDR: posts:51075
    restart: on-failure

  main-db:
    image: postgres:latest
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: ${MAIN_DB_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./main_service/.database/postgres/data:/var/lib/postgresql/data:rw
    user: 501:20
    ports:
      - 5432:5432
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "PGPASSWORD=$MAIN_DB_PASSWORD", "psql", "-h", "main-db", "-U", "postgres", "-c", "'\\q'"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  posts:
    build:
      context: ./posts_service
      dockerfile: posts_service.dockerfile
    command: ./main
    ports:
      - 51075:51075
    depends_on:
      posts-db:
        condition: service_healthy
    environment:
      DB_PASSWORD: ${POSTS_DB_PASSWORD}
      POSTS_SERVER_PORT: 51075
    restart: on-failure
  
  posts-db:
    image: postgres:latest
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: ${POSTS_DB_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./posts_service/.database/postgres/data:/var/lib/postgresql/data:rw
    user: 501:20
    ports:
      - 5433:5432
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "PGPASSWORD=$POSTS_DB_PASSWORD", "psql", "-h", "posts-db", "-U", "postgres", "-c", "'\\q'"]
      interval: 5s
      timeout: 5s
      retries: 5
